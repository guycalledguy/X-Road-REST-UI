{
  "tab": {
    "main": {
      "clients": "Clients",
      "keys": "Keys and certificates",
      "diagnostics": "Diagnostics",
      "settings": "Settings"
    },
    "client": {
      "details": "details",
      "serviceClients": "service clients",
      "services": "services",
      "internalServers": "internal servers",
      "localGroups": "local groups"
    }
  },
  "client": {
    "name": "Name",
    "id": "ID",
    "status": "Status",
    "owner": "Owner",
    "memberName": "Member Name",
    "memberClass": "Member Class",
    "memberCode": "Member Code",
    "subsystemCode": "Subsystem Code",
    "connType": "Connection type",
    "connTypeInfo": "Connection type for servers in service provider role is set in the Services tab by the service URL (http/https)",
    "saved": "Saved",
    "globalError": "Global error",
    "registered": "Registered",
    "registrationInProgress": "Registration in progress",
    "deletionInProgress": "Deletion in progress",
    "unknownMember": "unknown member"
  },
  "internalServers": {
    "connectionType": "Connection type",
    "connectionInfo": "Connection type for servers in service provider role is set in the Services tab by the service URL (http/https)",
    "tlsTitle": "Information System TLS certificate",
    "certHash": "Certificate Hash (SHA/1)",
    "ssCertTitle": "Security Server certificate",
    "connTypeUpdated": "Connection type updated"
  },
  "cert": {
    "signCertificate": "Sign Certificate",
    "serialNumber": "Serial Number",
    "state": "State",
    "expires": "Expires",
    "certificateHash": "Certificate Hash (SHA/1)",
    "infoSystem": "Information System TLS certificate",
    "keyUsage": {
      "DIGITAL_SIGNATURE": "Digital Signature",
      "NON_REPUDIATION": "Non Repudiation",
      "KEY_ENCIPHERMENT": "Key Encipherment",
      "DATA_ENCIPHERMENT": "Data Encipherment",
      "KEY_AGREEMENT": "Key Agreement",
      "KEY_CERT_SIGN": "Certificate Sign",
      "CRL_SIGN": "CRL Sign",
      "ENCIPHER_ONLY": "Encipher Only",
      "DECIPHER_ONLY": "Decipher Only"
    },
    "certificate": "Certificate",
    "name": "Name",
    "csp": "csp",
    "serial": "Serial",
    "hashInfo": "Hash (SHA-1)",
    "rsaModulus": "RSA Public Key Modulus",
    "rsaExp": "RSA Public Key Exponent",
    "deleteCertTitle": "Delete certificate?",
    "deleteCertConfirm": "Are you sure that you want to delete this certificate?",
    "certDeleted": "Certificate deleted"
  },
  "localGroups": {
    "addGroup": "Add group",
    "code": "Code",
    "description": "Description",
    "memberCount": "Member Count",
    "updated": "Updated"
  },
  "localGroup": {
    "localGroup": "Local group",
    "editDesc": "Edit description",
    "groupMembers": "Group Members",
    "addMembers": "Add Members",
    "name": "Member Name",
    "id": "Id",
    "accessDate": "Access Rights Given",
    "deleteTitle": "Delete group?",
    "deleteText": "Are you sure that you want to delete this group?",
    "removeTitle": "Remove member?",
    "removeText": "Are you sure that you want to remove this member?",
    "removeAllTitle": "Remove all members?",
    "removeAllText": "Are you sure that you want to remove all members of this group?",
    "descSaved": "Description saved",
    "groupDeleted": "Group deleted",
    "description": "Description",
    "code": "Code",
    "addLocalGroup": "Add Local Group",
    "localGroupAdded": "Local group added",
    "searchOptions": "Search options",
    "addSelected": "Add selected",
    "noResults": "Your search found no results."
  },
  "services": {
    "addWsdl": "Add WSDL",
    "addRest": "Add REST",
    "disableNotice": "Disable notice",
    "disableTitle": "Disable?",
    "service": "Service",
    "serviceCode": "Service Code",
    "url": "URL",
    "timeout": "Timeout",
    "deleteTitle": "Delete service description?",
    "deleteWsdlText": "Are you sure that you want to delete this WSDL?",
    "deleteRestText": "Are you sure that you want to delete this REST?",
    "noMatches": "No matching records",
    "disableSuccess": "Service description disabled",
    "enableSuccess": "Service description enabled",
    "restAdded": "REST added",
    "wsdlAdded": "WSDL added",
    "deleted": "Service description deleted",
    "restDetails": "REST details",
    "wsdlDetails": "WSDL details",
    "wsdlRefreshed": "WSDL refreshed",
    "editUrl": "Edit URL",
    "editServiceCode": "Edit service code",
    "serviceUrl": "Service URL",
    "applyToAll": "Apply to all in WSDL",
    "serviceParameters": "Service Parameters",
    "urlTooltip": "The URL where requests targeted at the service are directed",
    "timeoutSec": "Timeout (s)",
    "timeoutTooltip": "The maximum duration of a request to the service, in seconds",
    "verifyTls": "Verify TLS certificate",
    "tlsTooltip": "Verify TLS certificate when a secure connection is established",
    "deleting_services": "Deleting services:",
    "adding_services": "Adding services:",
    "wsdl_validation_warnings": "Validation warnings:"
  },
  "access": {
    "accessRights": "Access Rights",
    "addSubjects": "Add subjects",
    "addSubjectsTitle": "Add Subjects"
  },
  "action": {
    "addSubsystem": "add subsystem",
    "addClient": "add client",
    "search": "Search",
    "add": "Add",
    "export": "Export",
    "emptySearch": "Your search for {msg} found no results.",
    "noData": "No data",
    "ok": "Ok",
    "close": "Close",
    "cancel": "Cancel",
    "yes": "Yes",
    "refresh": "Refresh",
    "delete": "Delete",
    "remove": "Remove",
    "removeAll": "Remove All",
    "save": "Save",
    "continue": "Continue"
  },
  "login": {
    "username": "Username",
    "password": "Password",
    "logIn": "Log in",
    "logOut": "Log out",
    "errorMsg401": "Wrong username or password"
  },
  "logout": {
    "idleWarning": "You have been idle for 30 minutes and your session has expired. For security reasons, you will be logged out.",
    "sessionExpired": "Session expired"
  },
  "validation": {
    "invalidRest": "REST URL is not valid",
    "invalidWsdl": "WSDL URL is not valid"
  },
  "name": "Name",
  "member_class": "Member class",
  "member_name": "Member name",
  "member_code": "Member code",
  "subsystem_code": "Subsystem code",
  "warning": "Warning"
}